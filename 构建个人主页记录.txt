vue-cli 创建 ts 项目时需要 手动选择 typescript选项

加入sass配置：
npm install node-sass --save-dev 
npm install sass-loader --save-dev

安装插件：easy sass

安装配置：使sass 全局变量可以调用
npm install sass-resources-loader --save-dev
在vue.config.js中这样写：(如果没有手动在根目录创建)
module.exports = {
  css: {
    loaderOptions: {
      sass: {
        data: `
          @import "@/assets/styles/common.scss";
        `
      }
    }
  }
}

组建引入：
import {Component,Vue} from 'vue-property-decorator';
import {componentA,componentB} from '@/components';

 @Component({
    components:{
        componentA,
        componentB,
    },
    directives: {
        focus: {
            // 指令的定义
            inserted: function (el) {
                el.focus()
            }
        }
    }
})
export default class YourCompoent extends Vue{
   
}

父组建传子组件：
import {Component,Vue,Prop} from vue-property-decorator;

@Component
export default class YourComponent extends Vue {
    @Prop(String)
    propA:string;
    
    @Prop([String,Number])
    propB:string|number;
    
    @Prop({
     type: String, // type: [String , Number]
     default: 'default value', // 一般为String或Number
      //如果是对象或数组的话。默认值从一个工厂函数中返回
      // defatult: () => {
      //     return ['a','b']
      // }
     required: true,
     validator: (value) => {
        return [
          'InProcess',
          'Settled'
        ].indexOf(value) !== -1
     }
    })
    propC:string;
}

组件传值时会报空值的错：在属性定义时加!告诉编译器这个变量肯定会有值，例：
  @Prop({
    type: String,
    default: "1"
  })
  public listLength!: string;
